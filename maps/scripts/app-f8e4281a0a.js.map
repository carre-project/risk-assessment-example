{"version":3,"sources":["scripts/app-f8e4281a0a.js"],"names":["angular","module","config","$locationProvider","$compileProvider","html5Mode","debugInfoEnabled","constant","language","controller","$scope","$location","API","$sce","$timeout","cfpLoadingBar","CONFIG","getMeasureListWithLatestValue","user","username","lastMeasurements","then","res","data","results","predicates","values","observable_names","ob_dates","map","obj","push","p","value","replace","makeLabel","ob","ob_name","date","getRiskEvidences","err","risk_evidences","summary","educational_resources","risk_element_names","risk_factors","total_risk_evidences","length","forEach","rv","result","RiskEvidenceConditionParser","evaluate","condition","risk_factor","risk_evidence","rf_source","has_risk_factor_source","rf_target","has_risk_factor_target","rf_source_name","rl_source_name","rf_target_name","rl_target_name","rf_label","indexOf","label","source","target","evidences","confidence_interval_min","confidence_interval_max","risk_evidence_ratio_value","display","loading","rf","link","ev","ratio","measurements","Date","toLocaleString","setGraphUrl","educational","rl","encodeURI","selectEducational","iframesLoaded","base","params","url","Object","keys","join","entrysystemUrlSankey","trustAsResourceUrl","str","substring","lastIndexOf","CARRE_DEVICES","accounts","testToken","token","search","baseUrl","absUrl","loginUrl","logoutUrl","visualizationType","oauth_token","loadData","loadTestUser","start","lang","changeLanguage","iframeLoaded","complete","educationalTerm","showEducational","educationalObjectUrl","service","$http","$cookies","$q","getUser","TOKEN","get","URL","email","r","defer","reject","promise","get_lastMeasurements","query","prefixes","post","encodeURIComponent","get_risk_evidences","this","exports"],"mappings":"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","file":"scripts/app-f8e4281a0a.js","sourcesContent":["/*global angular */\nangular.module('CarreExample', [\n    'ngCookies',\n    'ngSanitize',\n    'ngAnimate',\n    'cfp.loadingBar',\n    'ngOnload'\n])\n.config(function($locationProvider,$compileProvider) {\n$locationProvider.html5Mode(true);\n  \n// Disable log\n$compileProvider.debugInfoEnabled(false);\n  \n})\n.constant('CONFIG',{\n'language':'en'\n});\n/*global angular,RiskEvidenceConditionParser */\nangular.module('CarreExample')\n  .controller('ExampleController', function($scope, $location, API,$sce, $timeout,cfpLoadingBar,CONFIG) {\n\n    //set up the urls \n    var CARRE_DEVICES = API.accounts;\n    var testToken = '66efc31e652208e257c3781b2a40376084c0a2ac',token=null;\n    if($location.search().token) token = $location.search().token;\n    \n    //clean up the browser url\n    $location.url('/').replace();\n    var baseUrl = $location.absUrl();\n    $scope.loginUrl = CARRE_DEVICES + '/login?next=' + baseUrl;\n    $scope.logoutUrl = CARRE_DEVICES + '/logout?next=' + baseUrl;\n    \n    // set default visualization type\n    $scope.visualizationType = 'list';\n\n    // Retrieving a cookie and set initial user object\n    API.user(token).then(function(res) {\n      $scope.user = {\n        oauth_token: res.oauth_token,\n        username: res.username\n      };\n      $scope.loadData();\n    });\n\n    $scope.loadTestUser = function() { \n      API.user(testToken).then(function(res) {\n        $scope.user = {\n          oauth_token: res.oauth_token,\n          username: res.username\n        };\n        $scope.loadData();\n      });\n    };\n\n    $scope.loadData = function() {\n      $scope.measurements=[];\n      $scope.loading = true;\n      cfpLoadingBar.start();\n      getMeasureListWithLatestValue();\n    };\n\n    var results = {};\n    \n    function getMeasureListWithLatestValue() {\n\n      if (!$scope.user.username) return;\n      API.lastMeasurements($scope.user).then(function(res) {\n        console.log(res);\n        var data = res.data;\n\n        results.predicates = [];\n        results.values = {};\n        results.observable_names = {};\n        results.ob_dates = {};\n\n        data.map(function(obj) {\n          results.predicates.push(obj.p.value.replace(\"http://carre.kmi.open.ac.uk/ontology/sensors.owl#\", \":\"));\n          results.values[makeLabel(obj.ob.value)] = obj.value.value;\n          results.observable_names[makeLabel(obj.ob.value)] = obj.ob_name.value;\n          results.ob_dates[makeLabel(obj.ob.value)] = obj.date.value;\n        });\n\n        //get the risk evidences\n        getRiskEvidences();\n      }, function(err) { console.log(\"Error in query measurementList\"); console.log(err); });\n\n\n    }\n\n\n    function getRiskEvidences() {\n\n      API.risk_evidences($scope.user, results.predicates).then(function(res) {\n        var data = res.data;\n        results.summary = [];\n        results.risk_evidences = {};\n        results.educational_resources = [];\n        results.risk_element_names = [];\n        results.risk_factors = {};\n        results.total_risk_evidences = data.length;\n        data.forEach(function(rv) {\n          var result = RiskEvidenceConditionParser.evaluate(rv.condition.value, results.values);\n\n          //             console.log(\n          //               makeLabel(rv.risk_factor.value),\n          //               makeLabel(rv.risk_evidence.value),\n          //               result,\n          //               rv.condition.value,getValues(results.values).join(\"|\"),\n          //               \"---------\"\n          //             );\n\n\n          if (result) {\n\n            var risk_factor = makeLabel(rv.risk_factor.value);\n            var risk_evidence = makeLabel(rv.risk_evidence.value);\n            var rf_source = makeLabel(rv.has_risk_factor_source.value);\n            var rf_target = makeLabel(rv.has_risk_factor_target.value);\n            var rf_source_name = makeLabel(rv.rl_source_name.value);\n            var rf_target_name = makeLabel(rv.rl_target_name.value);\n            var rf_label = makeLabel(rv.rl_source_name.value) + \" --> \" + makeLabel(rv.rl_target_name.value);\n            \n            // populate risk element names\n            if(results.risk_element_names.indexOf(rf_source_name)===-1) results.risk_element_names.push(rf_source_name);\n            if(results.risk_element_names.indexOf(rf_target_name)===-1) results.risk_element_names.push(rf_target_name);\n            \n            \n            results.risk_factors[risk_factor] = results.risk_factors[risk_factor] || {\n              label: rf_label,\n              source:rf_source,\n              target:rf_target,\n              evidences: []\n            };\n\n            results.risk_factors[risk_factor].evidences.push(risk_evidence);\n            results.risk_evidences[risk_evidence] = {\n              confidence_interval_min: rv.confidence_interval_min.value,\n              confidence_interval_max: rv.confidence_interval_max.value,\n              risk_evidence_ratio_value: rv.risk_evidence_ratio_value.value\n            };\n\n          }\n\n        });\n        console.log(results);\n        display(results);\n        $scope.loading = false;\n        //           console.log(\n        //             results.risk_factors,\n        //             results.values,\n        //             results.summary.length+\"/\"+results.total_risk_evidences);\n\n      });\n\n    }\n\n    function display(results) {\n\n      $scope.risk_factors = [];\n      //make risk factors with evidences\n      for (var rf in results.risk_factors) {\n        $scope.risk_factors.push({\n          label: results.risk_factors[rf].label,\n          link: \"https://entry.carre-project.eu/risk_factors/\" + rf,\n          evidences: results.risk_factors[rf].evidences.map(function(ev) {\n            return {\n              link: \"https://entry.carre-project.eu/risk_evidences/\" + ev,\n              label: ev,\n              ratio: results.risk_evidences[ev].risk_evidence_ratio_value\n            };\n          })\n        });\n      }\n      $scope.measurements = [];\n      //make measurements\n      for (var ob in results.observable_names) {\n        $scope.measurements.push({\n          label: results.observable_names[ob],\n          link: \"https://entry.carre-project.eu/observables/\" + ob,\n          value: results.values[ob],\n          date: new Date(results.ob_dates[ob]).toLocaleString()\n        });\n      }\n      setGraphUrl();\n      \n      // make educational resources\n      $scope.educational=[];\n      $scope.educational = results.risk_element_names.map(function(rl){\n        return {\n          link:'https://edu.carre-project.eu/search/'+encodeURI(rl),\n          label:rl\n        }\n      })\n      //select first\n      $scope.selectEducational($scope.educational[0].label);\n\n    }\n    \n    // Change language specific\n    $scope.lang=CONFIG.language;\n    $scope.changeLanguage = function(){\n      CONFIG.language = $scope.lang;\n      $scope.loadData();\n    }\n    \n    \n    $scope.iframeLoaded=function(){\n      $scope.iframesLoaded++;\n      if($scope.iframesLoaded===1) {\n        cfpLoadingBar.complete();\n      }\n    };\n    \n    function setGraphUrl(){\n      $scope.iframesLoaded=0;\n      \n      var base = \"//entry.carre-project.eu/\";\n      // var base = \"//beta.carre-project.eu:3000/#/\";\n      var params = \"explore?embed=true&hidemenu=true&showonlygraph=true&elementstype=risk_evidences&lang=\"+CONFIG.language;\n      var url = base+params+\"&elements=\"+Object.keys(results.risk_evidences).join(\",\");\n      $scope.entrysystemUrlSankey = $sce.trustAsResourceUrl(url+\"&graphtype=sankey\");\n      // $scope.entrysystemUrlNetwork = $sce.trustAsResourceUrl(url+\"&graphtype=network\");\n    }\n\n\n    $scope.selectEducational=function(rl){\n      $scope.educationalTerm = rl;\n      $scope.showEducational=false;\n      cfpLoadingBar.start();\n      // var base = \"//edu.carre-project.eu/search/\";\n      var base = \"//beta.carre-project.eu:8080/search/\";\n      var url = base+encodeURI(rl);\n      $scope.educationalObjectUrl = $sce.trustAsResourceUrl(url+\"?embed=true&lang=\"+CONFIG.language);\n      $timeout(function(){\n        $scope.showEducational=true;\n        cfpLoadingBar.complete();\n      },2000);\n    }\n\n    function makeLabel(str) {\n      var result = \"\";\n      if (str.indexOf(\"#\") >= 0) {\n        result = str.substring(str.lastIndexOf(\"#\") + 1)\n          .replace(\"risk_factor_association_type\", \"\");\n      } else result = str.substring(str.lastIndexOf(\"/\") + 1);\n      if (result.indexOf(\"RF_\") +\n        result.indexOf(\"OB_\") +\n        result.indexOf(\"RV_\") +\n        result.indexOf(\"RL_\") > -4) return result;\n      else return result.replace(/[_-]+/g, \" \");\n    }\n    \n\n  });\n  \n/*global angular */\nangular.module('CarreExample')\n  .service('API', function($http, $cookies, $q,CONFIG) {\n\n    //set up the urls \n    var CARRE_DEVICES = 'https://devices.carre-project.eu/devices/accounts';\n    var URL = 'https://devices.carre-project.eu/ws/'; \n    var prefixes = \"PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> \\n\\\n            PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \\n\\\n            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \\n\\\n            PREFIX : <http://carre.kmi.open.ac.uk/ontology/sensors.owl#> \\n\\\n            PREFIX risk: <http://carre.kmi.open.ac.uk/ontology/risk.owl#> \\n\\\n            PREFIX carreManufacturer: <http://carre.kmi.open.ac.uk/manufacturers/> \\n\\\n            PREFIX carreUsers: <https://carre.kmi.open.ac.uk/users/> \\n \";\n\n    \n  this.exports={\n    'accounts': CARRE_DEVICES,\n    'user': getUser,\n    'lastMeasurements': get_lastMeasurements,\n    'risk_evidences': get_risk_evidences\n  };\n  \n  function getUser(token){\n    var TOKEN = $cookies.get('CARRE_USER') || token || '';\n    //validate cookie token with userProfile api function and get username userGraph\n    if (TOKEN.length > 0) {\n      return $http.get(URL + 'userProfile?token=' + TOKEN).then(function(res) {\n        return {\n          oauth_token: TOKEN,\n          username: res.data.username,\n          email: res.data.email\n        };\n      }, function(err) {\n        console.log(err);\n        return {}\n      });\n    } else {\n      var r=$q.defer();\n      r.reject({})\n      return r.promise;\n    }\n  }\n  \n  \n  function get_lastMeasurements(user) {\n  \n    console.log(\"Get Measurement of List \");\n\n    var query = prefixes +\n    \"SELECT ?date ?p ?value ?ob ?ob_name FROM <https://carre.kmi.open.ac.uk/users/\"+user.username+\"> FROM <http://carre.kmi.open.ac.uk/riskdata> WHERE {  \\n\\\n    { \\n\\\n    SELECT max(?d) as ?date ?p FROM <https://carre.kmi.open.ac.uk/users/\"+user.username+\"> WHERE { \\n\\\n            ?m :has_date / :has_value ?d ; ?p ?o . \\n\\\n            ?o :has_value ?v1 . \\n\\\n                FILTER(!(?p = :has_date) && !(?p = :has_start_date)&& !(?p = :has_end_date) && !(?p = :has_sleep_status)) \\n\\\n        } } \\n\\\n    ?measurement :has_date / :has_value ?date ; ?p ?o . \\n\\\n    ?o :has_value ?value . ?ob a risk:observable ; risk:has_external_predicate ?p; risk:has_observable_name ?ob_name.  \\n\\\n    FILTER (lang(?ob_name)='\"+CONFIG.language+\"') \\n\\\n    } \\n\";\n\n    return $http.post(URL+'query?token='+user.oauth_token+'&sparql='+encodeURIComponent(query));\n    \n\n  }\n  \n\n  \n  function get_risk_evidences(user,predicates) {\n\n    console.log(\"Get RiskEvidences of List \");\n    var query = prefixes+\"SELECT DISTINCT ?risk_evidence ?condition ?confidence_interval_min ?confidence_interval_max ?risk_evidence_ratio_value ?risk_evidence_ratio_type ?risk_factor ?has_risk_factor_source ?has_risk_factor_target ?rl_source_name ?rl_target_name ?has_risk_factor_association_type FROM <http://carre.kmi.open.ac.uk/riskdata> WHERE {  \\n \"+\n    \"  ?risk_evidence a risk:risk_evidence ;  \\n \"+\n    \"  risk:has_risk_factor ?risk_factor;  \\n \"+\n    \" risk:has_risk_evidence_ratio_type ?risk_evidence_ratio_type;  \\n \"+\n    \"   risk:has_risk_evidence_ratio_value ?risk_evidence_ratio_value;  \\n \"+\n    \"   risk:has_confidence_interval_max ?confidence_interval_max;  \\n \"+\n    \"   risk:has_confidence_interval_min ?confidence_interval_min;  \\n \"+\n    \"   risk:has_risk_evidence_observable ?ob ;  \\n \"+\n    \"   risk:has_observable_condition ?condition .  \\n \"+\n    \" #details for risk factor  \\n \"+\n    \" ?risk_factor risk:has_risk_factor_association_type ?has_risk_factor_association_type;  \\n \"+\n    \" risk:has_risk_factor_source ?has_risk_factor_source;  \\n \"+\n    \" risk:has_risk_factor_target ?has_risk_factor_target.  \\n \"+\n    \" ?has_risk_factor_source risk:has_risk_element_name ?rl_source_name.  \\n \"+\n    \" ?has_risk_factor_target risk:has_risk_element_name ?rl_target_name.   \\n \"+\n    \" FILTER(lang(?rl_source_name)='\"+CONFIG.language+\"')   \\n \"+\n    \" FILTER(lang(?rl_target_name)='\"+CONFIG.language+\"')   \\n \"+\n    \" {  \\n \"+\n    \"  SELECT ?ob FROM <http://carre.kmi.open.ac.uk/riskdata> WHERE {  \\n \"+\n    \"  ?ob a risk:observable ;  \\n \"+\n    \"         risk:has_external_predicate ?p.    \\n \"+\n    \" VALUES ?p {  \\n \"+predicates.join(\" \")+\" }  \\n \"+\n    \" }  \\n \"+\n    \" }  \\n \"+\n    \" }\";\n\n\n    return $http.post(URL+'query?token='+user.oauth_token+'&sparql='+encodeURIComponent(query));\n    \n\n  }\n  \n\n\n  \n  return this.exports;\n  \n});"],"sourceRoot":"/source/"}